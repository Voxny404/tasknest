function getStatusClass(status) {
    const statusClasses = {
        "open": "status open",
        "in-progress": "status in-progress",
        "closed": "status closed",
        "on-hold": "status on-hold",
        "waiting-for-review": "status waiting-for-review",
        "completed": "status completed",
        "backlog": "status backlog",
        "blocked": "status blocked",
        "ready-for-testing": "status ready-for-testing",
        "in-testing": "status in-testing",
        "under-investigation": "status under-investigation",
        "escalated": "status escalated",
        "reopened": "status reopened",
        "archived": "status archived",
        "planned": "status planned",
        "in-design": "status in-design",
        "deferred": "status deferred",
        "in-review": "status in-review",
        "done": "status done",
        "waiting-for-approval": "status waiting-for-approval",
        "scheduled": "status scheduled",
        "in-preparation": "status in-preparation",
        "pre-production": "status pre-production",
        "in-production": "status in-production",
        "pending": "status pending",
        "ready-for-release": "status ready-for-release",
        "released": "status released",
        "under-development": "status under-development",
        "under-design": "status under-design",
        "testing-failed": "status testing-failed",
        "testing-passed": "status testing-passed",
        "waiting-for-feedback": "status waiting-for-feedback",
        "needs-information": "status needs-information",
        "resolved": "status resolved",
        "resolved-but-not-verified": "status resolved-but-not-verified",
        "verified": "status verified",
        "cancelled": "status cancelled",
        "follow-up": "status follow-up",
        "in-progress-awaiting-response": "status in-progress-awaiting-response",
        "under-evaluation": "status under-evaluation"
    };
    return statusClasses[status] || "status"; // Default class if status doesn't match
}

function getCategoryClass(category) {
  const map = {
    frontend: "hashtag-green",
    backend: "hashtag-blue",
    extension: "hashtag-purple",
    api: "hashtag-cyan",
    database: "hashtag-indigo",
    devops: "hashtag-teal",
    design: "hashtag-pink",
    testing: "hashtag-yellow",
    security: "hashtag-red",
    documentation: "hashtag-gray",
    performance: "hashtag-orange",
    research: "hashtag-teal",
    mobile: "hashtag-blue",
    "ui/ux": "hashtag-pink",
    integration: "hashtag-purple",
    accessibility: "hashtag-cyan",
    compliance: "hashtag-dark",
    scalability: "hashtag-green",
    automation: "hashtag-purple",
    "business-logic": "hashtag-indigo",
    cloud: "hashtag-cyan",
    analytics: "hashtag-orange",
    localization: "hashtag-orange",
    payment: "hashtag-green",
    "third-party": "hashtag-orange",
    seo: "hashtag-pink",
    "content-management": "hashtag-blue",
    "product-management": "hashtag-teal",
    "customer-support": "hashtag-green",
    marketing: "hashtag-pink",
    sales: "hashtag-yellow",
    legal: "hashtag-dark",
    partnerships: "hashtag-indigo",
    training: "hashtag-green",
    audit: "hashtag-dark",
    "legal-compliance": "hashtag-dark",
    community: "hashtag-teal",
    scripting: "hashtag-purple",
    "data-migration": "hashtag-blue",
    monitoring: "hashtag-cyan",
    other: "hashtag-gray"
  };
  return map[category?.toLowerCase()] || "hashtag-default";
}

function getPriorityClass(priority) {
  const map = {
    low: "hashtag-gray",
    medium: "hashtag-yellow",
    high: "hashtag-orange",
    critical: "hashtag-red",
    urgent: "hashtag-pink",
    normal: "hashtag-green",
    important: "hashtag-teal",
    routine: "hashtag-blue",
    major: "hashtag-orange",
    minor: "hashtag-gray",
    essential: "hashtag-purple",
    emergency: "hashtag-red"
  };
  return map[priority?.toLowerCase()] || "hashtag-default";
}

function getTypeClass(type) {
  const map = {
    bug: "hashtag-red",
    feature: "hashtag-green",
    task: "hashtag-blue",
    improvement: "hashtag-purple",
    refactor: "hashtag-cyan",
    research: "hashtag-teal",
    maintenance: "hashtag-orange",
    documentation: "hashtag-gray",
    test: "hashtag-yellow",
    deployment: "hashtag-blue",
    design: "hashtag-pink",
    "code-review": "hashtag-purple",
    security: "hashtag-red",
    support: "hashtag-green",
    optimization: "hashtag-orange",
    analytics: "hashtag-cyan",
    setup: "hashtag-gray",
    meeting: "hashtag-teal",
    integration: "hashtag-blue",
    planning: "hashtag-indigo",
    migration: "hashtag-purple",
    training: "hashtag-green",
    qa: "hashtag-yellow",
    configuration: "hashtag-gray",
    troubleshooting: "hashtag-red",
    "research-spike": "hashtag-teal",
    hotfix: "hashtag-red",
    rollback: "hashtag-orange",
    prototype: "hashtag-indigo",
    demo: "hashtag-pink",
    onboarding: "hashtag-green",
    offboarding: "hashtag-gray",
    legal: "hashtag-dark",
    compliance: "hashtag-dark",
    "data-entry": "hashtag-blue",
    localization: "hashtag-orange",
    monitoring: "hashtag-cyan",
    performance: "hashtag-yellow",
    backup: "hashtag-purple",
    "bug-fix": "hashtag-red",
    "feature-implementation": "hashtag-green",
    refactoring: "hashtag-cyan",
    "technical-debt": "hashtag-orange",
    "user-feedback": "hashtag-pink",
    "user-story": "hashtag-indigo",
    "api-integration": "hashtag-blue",
    server: "hashtag-gray",
    accessibility: "hashtag-teal",
    scalability: "hashtag-green",
    automation: "hashtag-purple",
    "business-logic": "hashtag-indigo",
    cloud: "hashtag-cyan",
    payment: "hashtag-green",
    "third-party": "hashtag-orange",
    seo: "hashtag-pink",
    "content-management": "hashtag-blue",
    "product-management": "hashtag-teal",
    "customer-support": "hashtag-green",
    marketing: "hashtag-pink",
    sales: "hashtag-yellow",
    partnerships: "hashtag-indigo",
    audit: "hashtag-dark",
    "legal-compliance": "hashtag-dark",
    community: "hashtag-teal",
    scripting: "hashtag-purple",
    "data-migration": "hashtag-blue",
    other: "hashtag-gray"
  };
  return map[type?.toLowerCase()] || "hashtag-default";
}

